// tslint:disable
/**
 * Trading.ServiceManagerUtils.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from "rxjs";
import type { AjaxResponse } from "rxjs/ajax";
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from "../runtime";
import type { OperationOpts, HttpHeaders } from "../runtime";
import type { IncidentRecord } from "../models";

export interface IncidentsGetRequest {
  id: string;
}

export interface IncidentsPostRequest {
  value: IncidentRecord;
}

/**
 * no description
 */
export class IncidentsApi extends BaseAPI {
  /**
   */
  incidentsGet({ id }: IncidentsGetRequest): Observable<IncidentRecord>;
  incidentsGet(
    { id }: IncidentsGetRequest,
    opts?: OperationOpts,
  ): Observable<AjaxResponse<IncidentRecord>>;
  incidentsGet(
    { id }: IncidentsGetRequest,
    opts?: OperationOpts,
  ): Observable<IncidentRecord | AjaxResponse<IncidentRecord>> {
    throwIfNullOrUndefined(id, "id", "incidentsGet");

    return this.request<IncidentRecord>(
      {
        url: "/api/incidents/{id}".replace("{id}", encodeURI(id)),
        method: "GET",
      },
      opts?.responseOpts,
    );
  }

  /**
   */
  incidentsPost({ value }: IncidentsPostRequest): Observable<string>;
  incidentsPost(
    { value }: IncidentsPostRequest,
    opts?: OperationOpts,
  ): Observable<AjaxResponse<string>>;
  incidentsPost(
    { value }: IncidentsPostRequest,
    opts?: OperationOpts,
  ): Observable<string | AjaxResponse<string>> {
    throwIfNullOrUndefined(value, "value", "incidentsPost");

    const headers: HttpHeaders = {
      "Content-Type": "application/json",
    };

    return this.request<string>(
      {
        url: "/api/incidents/new",
        method: "POST",
        headers,
        body: value,
      },
      opts?.responseOpts,
    );
  }
}
